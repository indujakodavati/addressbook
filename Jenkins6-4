pipeline {
    agent none

    tools{
        // jdk "myjava"
        maven "mymaven"
   }

    parameters{
        string(name:'Env',defaultValue:'Test',description:'version to deploy')
        booleanParam(name:'executeTests',defaultValue: true,description:'decide to run tc')
        choice(name:'APPVERSION',choices:['1.1','1.2','1.3'])

   }

   environment{
        Build_Server = 'ec2-user@172.31.4.131'
   }

    stages {
        stage('compile') {
            agent any
            steps {
                script{
                    echo "Compile the code in ${params.Env}"
                sh "mvn compile"
                }
            }
        }
        
        stage('codereview') {
            agent any
            steps {
                script{
                    echo 'revewing the code with pmd'
                sh "mvn pmd:pmd"
                }
            }
        }
        
        stage('unittest') {
            agent any
            when{
                expression{
                    params.executeTests == true 
                }
             }
            steps {
                script{
                    echo 'testing the code with junit'
                sh "mvn test"
                }
            }
            post{
                always{
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('coverageanalysis') {
            agent {label 'linux_slave'}
            steps {
                script{
                    echo 'static code coverage with jacoco'
                sh "mvn verify"
                }
            }
        }

        stage('package') {
            agent any
            steps {
                script{
                    sshagent(['apssdc_jenkins_slave2']) {
                        echo "Packaging the code ${params.APPVERSION}"
                    sh "scp -o StrictHostKeyChecking=no server-script.sh ${Build_Server}:/home/ec2-user"
                    sh "ssh -o StrictHostKeyChecking=no ${Build_Server} 'bash ~/server-script.sh'"
                    }
                }
            }
        }

        stage('publish') {
            agent any
            input{
                    message "Select the platform to deploy"
                ok "platform selected"
                parameters{
                    choice(name:'NEWAPP',choices:['EKS','Ec2','on-premises'])
                }
           }
            steps {
                script{
                    echo 'publishing the artifact to jfrog'
                sh "mvn -U deploy -s settings.xml"
                }
            }
        }
    }
}
